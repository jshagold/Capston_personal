"use strict";var _interopRequireWildcard=require("@babel/runtime/helpers/interopRequireWildcard"),_interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0}),exports["default"]=void 0;var _defineProperty2=_interopRequireDefault(require("@babel/runtime/helpers/defineProperty")),_regenerator=_interopRequireDefault(require("@babel/runtime/regenerator")),_asyncToGenerator2=_interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator")),_classCallCheck2=_interopRequireDefault(require("@babel/runtime/helpers/classCallCheck")),_createClass2=_interopRequireDefault(require("@babel/runtime/helpers/createClass")),_possibleConstructorReturn2=_interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn")),_getPrototypeOf2=_interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf")),_inherits2=_interopRequireDefault(require("@babel/runtime/helpers/inherits")),_Plugin2=_interopRequireDefault(require("../plugins/Plugin")),_Blockchains=require("../models/Blockchains"),PluginTypes=_interopRequireWildcard(require("../plugins/PluginTypes")),_SocketService=_interopRequireDefault(require("../services/SocketService")),_index=require("../index"),LocalSocket=/*#__PURE__*/function(a){function b(a,c){var d;return(0,_classCallCheck2["default"])(this,b),d=(0,_possibleConstructorReturn2["default"])(this,(0,_getPrototypeOf2["default"])(b).call(this,"LocalSocket",PluginTypes.WALLET_SUPPORT)),d.name="LocalSocket",d.context=a,d.holderFns=c,d}return(0,_inherits2["default"])(b,a),(0,_createClass2["default"])(b,[{key:"connect",value:function connect(a){var b=this,c=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{};return new Promise(function(d){if(!a||!a.length)throw new Error("You must specify a name for this connection");c=Object.assign({linkTimeout:3e3,allowHttp:!0},c),b.socketService=new _SocketService["default"](a,c.linkTimeout),b.socketService.link(c.allowHttp).then(/*#__PURE__*/function(){var a=(0,_asyncToGenerator2["default"])(/*#__PURE__*/_regenerator["default"].mark(function a(c){return _regenerator["default"].wrap(function(a){for(;;)switch(a.prev=a.next){case 0:if(c){a.next=2;break}return a.abrupt("return",d(!1));case 2:return b.holderFns.get().isExtension=!1,b.holderFns.get().wallet||(b.holderFns.get().wallet=b.name),a.abrupt("return",d(b.socketService));case 5:case"end":return a.stop();}},a)}));return function(){return a.apply(this,arguments)}}())})}},{key:"runAfterInterfacing",value:function(){var a=(0,_asyncToGenerator2["default"])(/*#__PURE__*/_regenerator["default"].mark(function a(){var b=this;return _regenerator["default"].wrap(function(a){for(;;)switch(a.prev=a.next){case 0:return this.holderFns.get().addEventHandler(function(a,c){return b.eventHandler(a,c)},"internal"),a.next=3,this.holderFns.get().getIdentityFromPermissions();case 3:return this.holderFns.get().identity=a.sent,a.abrupt("return",!0);case 5:case"end":return a.stop();}},a,this)}));return function runAfterInterfacing(){return a.apply(this,arguments)}}()},{key:"methods",value:function methods(){return b.getMethods(this)}},{key:"eventHandler",value:function(){var a=(0,_asyncToGenerator2["default"])(/*#__PURE__*/_regenerator["default"].mark(function a(b){return _regenerator["default"].wrap(function(a){for(;;)switch(a.prev=a.next){case 0:a.t0=b,a.next=a.t0===_index.EVENTS.Disconnected?3:a.t0===_index.EVENTS.LoggedOut?5:9;break;case 3:return this.holderFns.get().identity=null,a.abrupt("break",9);case 5:return a.next=7,this.holderFns.get().getIdentityFromPermissions();case 7:return this.holderFns.get().identity=a.sent,a.abrupt("break",9);case 9:case"end":return a.stop();}},a,this)}));return function eventHandler(){return a.apply(this,arguments)}}()}],[{key:"getMethods",value:function getMethods(a){var b,c=function(b,c){return(b||c)&&(a.holderFns.get().identity=b),c||b};return b={},(0,_defineProperty2["default"])(b,_index.WALLET_METHODS.disconnect,function(){return a.socketService.disconnect()}),(0,_defineProperty2["default"])(b,_index.WALLET_METHODS.isConnected,function(){return a.socketService.isConnected()}),(0,_defineProperty2["default"])(b,_index.WALLET_METHODS.isPaired,function(){return a.socketService.isPaired()}),(0,_defineProperty2["default"])(b,_index.WALLET_METHODS.addEventHandler,function(b){var c=1<arguments.length&&void 0!==arguments[1]?arguments[1]:null;return a.socketService.addEventHandler(b,c)}),(0,_defineProperty2["default"])(b,_index.WALLET_METHODS.removeEventHandler,function(){var b=0<arguments.length&&void 0!==arguments[0]?arguments[0]:null;return a.socketService.removeEventHandler(b)}),(0,_defineProperty2["default"])(b,_index.WALLET_METHODS.listen,function(b){return a.socketService.addEventHandler(b)}),(0,_defineProperty2["default"])(b,_index.WALLET_METHODS.getVersion,function(){return a.socketService.sendApiRequest({type:"getVersion",payload:{}})}),(0,_defineProperty2["default"])(b,_index.WALLET_METHODS.getIdentity,function(b){return a.socketService.sendApiRequest({type:"getOrRequestIdentity",payload:{fields:b?b:{accounts:[a.holderFns.get().network]}}}).then(c)}),(0,_defineProperty2["default"])(b,_index.WALLET_METHODS.getAllAccountsFor,function(b){return a.socketService.sendApiRequest({type:"getAllAccountsFor",payload:{fields:b?b:{accounts:[a.holderFns.get().network]}}}).then(c)}),(0,_defineProperty2["default"])(b,_index.WALLET_METHODS.getIdentityFromPermissions,function(){return a.socketService.sendApiRequest({type:"identityFromPermissions",payload:{}}).then(c)}),(0,_defineProperty2["default"])(b,_index.WALLET_METHODS.forgetIdentity,function(){return a.socketService.sendApiRequest({type:"forgetIdentity",payload:{}}).then(function(a){return c(null,a)})}),(0,_defineProperty2["default"])(b,_index.WALLET_METHODS.updateIdentity,function(b){var d=b.name,e=b.kyc;return a.socketService.sendApiRequest({type:"updateIdentity",payload:{name:d,kyc:e}}).then(function(a){return a?c(a):null})}),(0,_defineProperty2["default"])(b,_index.WALLET_METHODS.authenticate,function(b){var c=1<arguments.length&&void 0!==arguments[1]?arguments[1]:null,d=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;return a.socketService.sendApiRequest({type:"authenticate",payload:{nonce:b,data:c,publicKey:d}})}),(0,_defineProperty2["default"])(b,_index.WALLET_METHODS.getArbitrarySignature,function(b,c){return a.socketService.sendApiRequest({type:"requestArbitrarySignature",payload:{publicKey:b,data:c}})}),(0,_defineProperty2["default"])(b,_index.WALLET_METHODS.getPublicKey,function(b){return a.socketService.sendApiRequest({type:"getPublicKey",payload:{blockchain:b}})}),(0,_defineProperty2["default"])(b,_index.WALLET_METHODS.linkAccount,function(b,c){return a.socketService.sendApiRequest({type:"linkAccount",payload:{account:b,network:c||a.holderFns.get().network}})}),(0,_defineProperty2["default"])(b,_index.WALLET_METHODS.hasAccountFor,function(b){return a.socketService.sendApiRequest({type:"hasAccountFor",payload:{network:b||a.holderFns.get().network}})}),(0,_defineProperty2["default"])(b,_index.WALLET_METHODS.suggestNetwork,function(b){return a.socketService.sendApiRequest({type:"requestAddNetwork",payload:{network:b||a.holderFns.get().network}})}),(0,_defineProperty2["default"])(b,_index.WALLET_METHODS.requestTransfer,function(b,c,d){var e=3<arguments.length&&void 0!==arguments[3]?arguments[3]:{};return a.socketService.sendApiRequest({type:"requestTransfer",payload:{network:b||a.holderFns.get().network,to:c,amount:d,options:e}})}),(0,_defineProperty2["default"])(b,_index.WALLET_METHODS.getAvatar,function(){return a.socketService.sendApiRequest({type:"getAvatar",payload:{}})}),(0,_defineProperty2["default"])(b,_index.WALLET_METHODS.requestSignature,function(b){return a.socketService.sendApiRequest({type:"requestSignature",payload:b})}),(0,_defineProperty2["default"])(b,_index.WALLET_METHODS.createTransaction,function(b,c,d,e){return a.socketService.sendApiRequest({type:"createTransaction",payload:{blockchain:b,actions:c,account:d,network:e||a.holderFns.get().network}})}),(0,_defineProperty2["default"])(b,_index.WALLET_METHODS.addToken,function(b,c){return a.socketService.sendApiRequest({type:"addToken",payload:{token:b,network:c||a.holderFns.get().network}})}),b}}]),b}(_Plugin2["default"]);exports["default"]=LocalSocket;